/*
 * Copyright notice
 *
 * (c) 2015 Wilhelm Behncke <behncke@sitegeist.de>
 * All rights reserved
 *
 * This file is part of the Sitegeist/MoveAlong project under MIT License.
 *
 * For the full copyright and license information, please read the
 * LICENSE.md file that was distributed with this source code.
 */

/**
 * Turn the response status code into a case
 */
prototype(Neos.Neos:Page) {
	httpResponseHead {
		statusCode = Neos.Fusion:Case {

			//
			// Match pre-configured 404 Pages
			//
			is404Page = Sitegeist.MoveAlong:Match404Page
			is404Page.@position = 'start'

			//
			// Match pre-configured 410 Pages
			//
			is410Page = Sitegeist.MoveAlong:Match410Page
			is410Page.@position = 'after is404Page'

			default {
				@position = 'end'
				condition = TRUE
				renderer = 200
			}
		}
	}
}

/**
 * Apply 404 status code in case of hitting a pre-configured 404 page
 */
prototype(Sitegeist.MoveAlong:Match404Page) < prototype(Neos.Fusion:Matcher) {
	condition = TRUE
	condition.@process {
		featureIsEnabled = ${value && (Configuration.setting('Sitegeist.MoveAlong.enable') == true)}
		isNotFoundDocument = ${value && documentNode.properties.uriPathSegment == '404'}
		onlyRenderWhenInLiveWorkspace = ${value && documentNode.context.workspace.name == 'live'}
	}

	renderer = 404
}

/**
 * Apply 410 status code in case of hitting a pre-configured 410 page
 */
prototype(Sitegeist.MoveAlong:Match410Page) < prototype(Neos.Fusion:Matcher) {
	condition = TRUE
	condition.@process {
		featureIsEnabled = ${value && (Configuration.setting('Sitegeist.MoveAlong.enable') == true)}
		isNotFoundDocument = ${value && documentNode.properties.uriPathSegment == '410'}
		onlyRenderWhenInLiveWorkspace = ${value && documentNode.context.workspace.name == 'live'}
	}

	renderer = 410
}
